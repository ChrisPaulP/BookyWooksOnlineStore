
services:
  bookwooks.orderapi.web:
    container_name: bookywooks.orderapi.web
    env_file:
      - .env
    ports:
      - "5001:8080"
      - "5002:8081"
    depends_on:
      - sqldata
      - rabbitmq
      - jaeger
      - qdrant
      # - otel-collector
    volumes:
      - ${USER_SECRETS_PATH}
      - ${HTTPS_CERTIFICATES_PATH}

  bookywooks.catalogue.api:
    container_name: bookywooks.catalogue.api
    env_file:
      - .env
    ports:
      - "5007:8080"
      - "5009:8081"
    depends_on:
      - postgresdb
      - rabbitmq
      - jaeger
      - bookywooks.identityserver
      # - otel-collector
    volumes:
      - ${USER_SECRETS_PATH}
      - ${HTTPS_CERTIFICATES_PATH}

  sagaorchestration:
    container_name: bookywooks.sagaorchestration
    depends_on:
      - statemachinedb
      - rabbitmq
      - jaeger
      # - otel-collector
    env_file:
      - .env

  sqldata:
    container_name: booky_wooks_sqldata
    env_file:
      - .env
    restart: always
    ports:
      - "5433:1433"

  statemachinedb:
    container_name: booky_wooks_statemachinedb
    env_file:
      - .env
    restart: always
    ports:
      - "5434:1433"

  identityserverdb:
    container_name: booky_wooks_identityserverdb
    env_file:
      - .env
    restart: always
    ports:
      - "5438:1433"

  postgresdb:
    container_name: booky_wooks_postgresdb
    env_file:
      - .env
    restart: always
    ports:
      - "5435:5432"

  rabbitmq:
    container_name: booky_wooks_rabbitmq
    hostname: "rabbitmq"
    env_file:
      - .env
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"

  elasticsearch:
    container_name: bookywooks.elasticsearch
    env_file:
      - .env
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-logs:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node

  kibana:
    container_name: bookywooks.kibana
    env_file:
      - .env
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  jaeger:
    container_name: bookywooks.jaeger
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686 
        # 16686 works locally
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 4317:4317
      - 4318:4318
      - 9411:9411
    environment:
      COLLECTOR_OTLP_ENABLED: true

  prometheus:
    ports:
      - "9090:9090"

  ocelot.gateway:
    container_name: bookywooks.ocelot.gateway
    env_file:
      - .env
    ports:
      - "65000:8080"
      # - "61902:8081"
    volumes:
      - ${USER_SECRETS_PATH}
      - ${HTTPS_CERTIFICATES_PATH}
    depends_on:
      - bookywooks.identityserver
      - bookwooks.orderapi.web
      - bookywooks.catalogue.api

  bookywooks.identityserver:
    container_name: bookywooks.identityserver
    env_file:
      - .env
    ports:
      - "5011:8080"
      - "5015:8081"
    volumes:
      - ${USER_SECRETS_PATH}
      - ${HTTPS_CERTIFICATES_PATH}

  bookwooks.mcpserver:
    container_name: bookywooks.mcpserver
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:8181
    env_file:
      - .env
    ports:
      - "8181:8181"
    volumes:
      - ${USER_SECRETS_PATH}
      - ${HTTPS_CERTIFICATES_PATH}
    depends_on:
      - sqldata

  qdrant:
    container_name: bookywooks.qdrantService
    env_file:
      - .env
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC