trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  BuildParameters.RestoreBuildProjects: '**/*.csproj'
  BuildParameters.TestProjects: |
     $(BuildParameters.RestoreBuildProjects) 
     # !**/*IntegrationTests*.csproj
     !**/*FunctionalTests*.csproj

jobs:
- job: BuildAndTest
  displayName: Build and Test

  steps:
  - task: DockerCompose@0
    displayName: "Run a Docker Compose command"
    inputs:
      dockerComposeFile: "docker-compose-integration-tests.yml"
      dockerComposeCommand: "up --abort-on-container-exit" 
    env:
      CONTAINER_NAME: 'bookywooks_orderapi_integrationtests'  # Define the container name here

  - task: DotNetCoreCLI@2
    displayName: Restore Nuget Packages 
    inputs:
       command: restore
       projects: $(BuildParameters.RestoreBuildProjects)
       configuration: $(buildConfiguration)  # Use the main build configuration variable

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build $(buildConfiguration)'
    inputs:
      command: 'build'
      projects: '**/BookyWooks.sln'
      arguments: '--configuration $(buildConfiguration)'

  - script: docker --version
    displayName: 'Print Docker Version'

  - name: Test
    run: dotnet test ./BookWooks.OrderApi.Web.sln --no-build

  - task: DotNetCoreCLI@2
    displayName: Run Tests
    inputs:
      command: test
      projects: $(BuildParameters.TestProjects) 
      arguments: --configuration $(buildConfiguration) --no-build


# - task: DotNetCoreCLI@2
#   displayName: 'dotnet test'
#   inputs:
#     command: 'test'
#     projects: '**/*UnitTests.csproj'
#     arguments: '--configuration $(buildConfiguration) --no-build'






