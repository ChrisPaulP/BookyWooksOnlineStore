trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  BuildParameters.RestoreBuildProjects: '**/*.csproj'
  BuildParameters.TestProjects: |
     $(BuildParameters.RestoreBuildProjects) 
     # !**/*IntegrationTests*.csproj
     !**/*FunctionalTests*.csproj
  system.debug: 'true' # Enable debug logging

jobs:
- job: BuildAndTest
  displayName: Build and Test

  steps:
  - task: DockerCompose@0
    displayName: "Run a Docker Compose command"
    inputs:
      dockerComposeFile: "docker-compose-integration-tests.yml"
      dockerComposeCommand: "up --abort-on-container-exit" 
    env:
      CONTAINER_NAME: 'bookywooks_orderapi_integrationtests'  

  - task: DotNetCoreCLI@2
    displayName: Restore Nuget Packages 
    inputs:
       command: restore
       projects: $(BuildParameters.RestoreBuildProjects)
       configuration: $(buildConfiguration)  

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build $(buildConfiguration)'
    inputs:
      command: 'build'
      projects: '**/BookyWooks.sln'
      arguments: '--configuration $(buildConfiguration)'

  - script: docker --version
    displayName: 'Print Docker Version'

  - task: DotNetCoreCLI@2
    displayName: Run Tests
    inputs:
      command: test
      projects: $(BuildParameters.TestProjects) 
      arguments: --configuration $(buildConfiguration) --no-build

  # - task: DotNetCoreCLI@2
  #   displayName: Publish
  #   inputs:
  #     command: publish
  #     publishWebProjects: false
  #     projects: $(BuildParameters.RestoreBuildProjects)
  #     arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)
  #     zipAfterPublish: True

  # - task: PublishBuildArtifacts@1
  #   displayName: Publish Artifact
  #   condition: succeededOrFailed()
  #   inputs:
  #     PathtoPublish: $(build.artifactstagingdirectory)
  #     TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'






